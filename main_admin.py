"""
Entry point cho ·ª®ng d·ª•ng Qu·∫£n l√Ω (Admin)
"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

import tkinter as tk
from tkinter import messagebox

from services import db
from services.face import ensure_face_lib
from ui.login_window import LoginWindow
from ui.admin_window import AdminWindow

class AdminAppController:
    """
    Controller qu·∫£n l√Ω lu·ªìng:
    1. M·ªü LoginWindow
    2. N·∫øu th√†nh c√¥ng -> M·ªü AdminWindow
    """
    def __init__(self, root):
        self.root = root
        self.admin_window = None
        
        # ===== THAY ƒê·ªîI: KH√îNG withdraw root =====
        # Thay v√†o ƒë√≥, ·∫©n root sau khi t·∫°o LoginWindow
        self.root.geometry("1x1+0+0")  # Thu nh·ªè root xu·ªëng 1 pixel
        self.root.overrideredirect(True)  # ·∫®n thanh title bar
        
        # Delay vi·ªác m·ªü LoginWindow
        self.root.after(100, self._show_login)

    def _show_login(self):
        """Hi·ªÉn th·ªã c·ª≠a s·ªï ƒëƒÉng nh·∫≠p"""
        print("DEBUG: ƒêang t·∫°o LoginWindow...")
        try:
            login_win = LoginWindow(self.root, on_success=self.on_login_success)
            print(f"DEBUG: LoginWindow ƒë√£ t·∫°o: {login_win}")
            print(f"DEBUG: LoginWindow winfo_exists: {login_win.winfo_exists()}")
            login_win.update()  # ===== QUAN TR·ªåNG: Force update =====
            print(f"DEBUG: LoginWindow winfo_viewable: {login_win.winfo_viewable()}")
            login_win.lift()
            login_win.focus_force()
            print("DEBUG: LoginWindow ƒë√£ s·∫µn s√†ng")
        except Exception as e:
            print(f"DEBUG: L·ªói t·∫°o LoginWindow: {e}")
            import traceback
            traceback.print_exc()
            messagebox.showerror("L·ªói", f"Kh√¥ng th·ªÉ m·ªü c·ª≠a s·ªï ƒëƒÉng nh·∫≠p: {e}")
            self.root.destroy()

    def on_login_success(self, username: str):
        """Callback khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng"""
        print(f"‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng: {username}")
        
        # ===== ·∫®n root nh·ªè ƒëi =====
        self.root.withdraw()
        
        # T·∫°o AdminWindow
        self.admin_window = AdminWindow(self.root, username)
        
        # X·ª≠ l√Ω khi ƒë√≥ng
        self.admin_window.protocol("WM_DELETE_WINDOW", self.on_admin_close)

    def on_admin_close(self):
        """Khi c·ª≠a s·ªï admin b·ªã ƒë√≥ng"""
        if messagebox.askyesno("X√°c nh·∫≠n", "B·∫°n c√≥ ch·∫Øc mu·ªën tho√°t?"):
            print("üëã ƒê√≥ng ·ª©ng d·ª•ng Admin.")
            self.root.destroy()

def main():
    """H√†m ch·∫°y ch√≠nh"""
    
    # 1. Ki·ªÉm tra th∆∞ vi·ªán Face Recognition
    try:
        ensure_face_lib()
        print("‚úÖ Th∆∞ vi·ªán face_recognition ƒë√£ s·∫µn s√†ng")
    except Exception as e:
        messagebox.showerror(
            "L·ªói nghi√™m tr·ªçng", 
            f"Kh√¥ng t·∫£i ƒë∆∞·ª£c face_recognition:\n\n{e}\n\n"
            f"Vui l√≤ng c√†i ƒë·∫∑t:\npip install face-recognition"
        )
        return

    # 2. Ki·ªÉm tra k·∫øt n·ªëi v√† kh·ªüi t·∫°o CSDL
    try:
        db.init_db()
    except Exception as e:
        messagebox.showerror(
            "L·ªói CSDL", 
            f"Kh√¥ng th·ªÉ k·∫øt n·ªëi ho·∫∑c kh·ªüi t·∫°o CSDL:\n\n{e}\n\n"
            f"Vui l√≤ng ki·ªÉm tra:\n"
            f"- MySQL Server ƒë√£ ch·∫°y\n"
            f"- Th√¥ng tin k·∫øt n·ªëi trong config.py"
        )
        return

    # 3. Kh·ªüi ch·∫°y ·ª©ng d·ª•ng
    try:
        root = tk.Tk()
        root.title("Face Attendance")
        
        app = AdminAppController(root)
        
        root.mainloop()
        
    except Exception as e:
        messagebox.showerror("L·ªói kh√¥ng x√°c ƒë·ªãnh", f"L·ªói: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()